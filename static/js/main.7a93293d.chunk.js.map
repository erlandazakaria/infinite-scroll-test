{"version":3,"sources":["Contexts/Modal.js","Components/Header.js","Components/Modal.js","Actions/index.js","Components/Card.js","Pages/MovieList.js","Pages/MovieDetail.js","App.js","reportWebVitals.js","Reducers/index.js","store.js","index.js"],"names":["ModalContext","createContext","ModalReducer","state","action","type","payload","Error","ModalProvider","props","useReducer","dispatch","value","useMemo","Provider","useModal","context","useContext","modal","setModal","closeModal","Header","style","textAlign","Loading","data","handleClick","onClick","styles","overlay","container","wrapper","alt","src","height","width","objectFit","position","zIndex","backgroundColor","display","justifyContent","alignItems","GET_LIST","CLEANING","MOVIE_LIST_LOADING","updateMovieDataStatus","getList","page","search","getState","a","movies","currentPage","totalPage","keyword","axios","get","process","params","apikey","s","response","Response","Search","totalResults","Card","history","useHistory","Poster","Title","Year","Type","alignSelf","push","imdbID","flexDirection","marginBottom","border","borderRadius","boxSizing","padding","MovieList","list","useSelector","useDispatch","useState","setPage","searchValue","setSearchValue","loader","useRef","observer","useEffect","isLoading","current","disconnect","IntersectionObserver","val","isIntersecting","prevPage","root","rootMargin","threshold","observe","onChange","e","target","marginLeft","map","element","ref","MovieDetail","id","useParams","setData","fetch","i","Object","keys","key","index","maxWidth","App","className","Modal","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","parseInt","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a93293d.chunk.js","sourcesContent":["import { createContext, useReducer, useMemo, useContext} from \"react\";\r\n\r\nconst ModalContext = createContext();\r\n\r\nconst initialModalState = false;\r\n\r\nfunction ModalReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"SET_MODAL\": {\r\n      return action.payload;\r\n    }\r\n    case \"UNSET_MODAL\": {\r\n      return initialModalState;\r\n    }\r\n    default: {\r\n      throw new Error(`Unhandled type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n\r\nexport function ModalProvider(props) {\r\n  const [state, dispatch] = useReducer(ModalReducer, initialModalState);\r\n  const value = useMemo(() => [state, dispatch], [state]);\r\n  return <ModalContext.Provider value={value} {...props} />\r\n}\r\n\r\nexport function useModal() {\r\n  const context = useContext(ModalContext);\r\n  if (!context) {\r\n    throw new Error(`useModal must be used within a ModalProvider`);\r\n  }\r\n  const [state, dispatch] = context;\r\n\r\n  const setModal = (payload) => {\r\n    dispatch({ type: \"SET_MODAL\", payload })\r\n  };\r\n\r\n  const closeModal = () => {\r\n    dispatch({ type: \"UNSET_MODAL\" })\r\n  };\r\n\r\n  return { modal: state, setModal, closeModal };\r\n}\r\n","const Header = () => {\r\n  return(\r\n    <h1 style={{textAlign: \"center\"}}>Welcome Movie Lover</h1>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","const Loading = ({ data, handleClick=()=>{} }) => {\r\n  return (\r\n    <div onClick={handleClick} style={styles.overlay}>\r\n      <div style={styles.container}>\r\n        <div style={styles.wrapper}>\r\n          <img alt=\"modal-popup\" src={data} height={300} width={600} style={{objectFit: \"contain\"}} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n\r\nconst styles = {\r\n  overlay: {position: \"absolute\", zIndex: 999998, width: \"100vw\", height: \"100vh\", backgroundColor: \"rgba(0,0,0,0.5)\"},\r\n  container: {position: \"absolute\", zIndex: 999999, width: \"100vw\", height: \"100vh\"},\r\n  wrapper: {display: \"flex\", width: \"100vw\", height: \"100vh\", justifyContent: \"center\", alignItems: \"center\"}\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const GET_LIST = \"GET_LIST\";\r\nexport const CLEANING = \"CLEANING\";\r\nexport const MOVIE_LIST_LOADING = \"MOVIE_LIST_LOADING\";\r\n\r\nexport const updateMovieDataStatus = (payload) => {\r\n  return {\r\n    type: MOVIE_LIST_LOADING,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const getList = (page, search) => async (dispatch, getState) => {\r\n  const { data, currentPage, totalPage, keyword } = getState().movies;\r\n  \r\n  if(page === currentPage && search === keyword) {\r\n    dispatch({\r\n      type: GET_LIST,\r\n      payload: {data, currentPage, totalPage, keyword}\r\n    })\r\n    return;\r\n  }\r\n\r\n  const response = await axios.get(process.env.REACT_APP_SERVER_URL, {\r\n    params: {\r\n      apikey: process.env.REACT_APP_API_KEY,\r\n      s: search,\r\n      page\r\n    }\r\n  });\r\n  if(response.data.Response !== 'False') {\r\n    const { Search, totalResults } = response.data;\r\n    dispatch({\r\n      type: GET_LIST,\r\n      payload: {\r\n        data: search !== keyword ? Search : [...data, ...Search],\r\n        currentPage: search !== keyword ? 1 : page,\r\n        totalPage: totalResults/10,\r\n        keyword: search\r\n      }\r\n    })\r\n  } else {\r\n    dispatch({type: GET_LIST, payload: null})\r\n  }\r\n  dispatch(updateMovieDataStatus(false))\r\n}\r\n\r\nexport const cleaning = (payload) => {\r\n  return {\r\n    type: CLEANING\r\n  }\r\n}\r\n","import { useHistory } from \"react-router-dom\";\r\n\r\nimport { useModal } from \"../Contexts/Modal\";\r\n\r\nconst Card = ({data}) => {\r\n  const history = useHistory();\r\n  const { setModal } = useModal();\r\n\r\n  return (\r\n    <div key={data.imdbID} style={styles.container}>\r\n      <div>\r\n        <img onClick={() => setModal(data.Poster)} alt={data.Title} src={data.Poster} width={100} height={150} style={{objectFit: \"contain\"}} />\r\n      </div>\r\n      <div style={styles.wrapper}>\r\n        <div>\r\n          <div>{data.Title}</div>\r\n          <div>{`Year: ${data.Year}`}</div>\r\n          <div>{`Type: ${data.Type}`}</div>\r\n        </div>\r\n        <div style={{alignSelf: \"flex-end\"}} onClick={() => history.push(`/infinite-scroll-test/movie-detail/${data.imdbID}`)}>Detail</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n\r\nconst styles = {\r\n  container: {display: \"flex\", flexDirection: \"row\", width: 500, height: 150, marginBottom: 5, border: \"1px solid grey\", borderRadius: 5},\r\n  wrapper: {display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", boxSizing: \"border-box\", width: \"100%\", height: 150, padding: 10}\r\n}\r\n","import React, { useState, useEffect, useRef, } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getList, updateMovieDataStatus, cleaning } from \"../Actions\";\r\nimport Card from \"../Components/Card\";\r\n\r\nconst MovieList = () => {\r\n  const list = useSelector(state => state.movies); \r\n  const dispatch = useDispatch();\r\n\r\n  const [ page, setPage ] = useState(1);\r\n  const [ searchValue, setSearchValue ] = useState(\"\");\r\n\r\n  const loader = useRef();\r\n  const observer = useRef();\r\n\r\n  const handleSearch = () => {\r\n    dispatch(updateMovieDataStatus(true))\r\n    dispatch(getList(1, searchValue))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(list.isLoading) return\r\n    if (observer.current) observer.current.disconnect()\r\n    observer.current = new IntersectionObserver(\r\n      (val) => {\r\n        const target = val[0];\r\n        if (target.isIntersecting && page < list.totalPage) {   \r\n          setPage(prevPage => prevPage + 1)\r\n        }\r\n      }, \r\n      {root: null, rootMargin: \"20px\", threshold: 1.0}\r\n    );\r\n    observer.current.observe(loader.current)\r\n  // eslint-disable-next-line\r\n  }, [list.isLoading]);\r\n\r\n  useEffect(() => {\r\n    dispatch(updateMovieDataStatus(true))\r\n    dispatch(getList(page, searchValue))\r\n  // eslint-disable-next-line\r\n  }, [page])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(cleaning())\r\n  // eslint-disable-next-line\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div style={styles.wrapper}>\r\n        <input value={searchValue} onChange={e => setSearchValue(e.target.value)} />\r\n        <button onClick={handleSearch} style={{marginLeft: 5}}>Search</button>\r\n      </div>\r\n      {list.data.map(element => (<Card data={element} key={`element-${element.imdbID}`} />))}\r\n      <div ref={loader} style={{marginBottom: 20}}>{page < list.totalPage && \"Loading More\"}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n\r\nconst styles = {\r\n  wrapper: {display: \"flex\", justifyContent: \"center\", marginBottom: 20}\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport { useModal } from \"../Contexts/Modal\";\r\n\r\nconst MovieDetail = () => {\r\n  const { id } = useParams();\r\n  const [ data, setData ] = useState(null);\r\n  const { setModal } = useModal();\r\n\r\n  const fetch = async () => {\r\n    const response = await axios.get(process.env.REACT_APP_SERVER_URL, {\r\n      params: {\r\n        apikey: process.env.REACT_APP_API_KEY,\r\n        i: id\r\n      }\r\n    });\r\n    if(response.data.Response === \"True\") {\r\n      setData(response.data)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch()\r\n  // eslint-disable-next-line\r\n  }, [])\r\n\r\n  return data ? (\r\n    <div style={styles.container}>\r\n      <h2>{data.Title}</h2>\r\n      <img onClick={() => setModal(data.Poster)} alt={data.Title} src={data.Poster} width={100} height={150} style={{objectFit: \"contain\"}} />\r\n      <h3>{data[\"Ratings\"] && data[\"Ratings\"][0] && data[\"Ratings\"][0][\"Value\"]}</h3>\r\n      {Object.keys(data).map((key, index) => {\r\n        if(key !== \"Title\" && key !== \"Ratings\" && key !== \"Plot\" && key !== \"Poster\" ) {\r\n          return <div key={key}>{key} : {data[key]}</div>\r\n        }\r\n        return null;\r\n      })}\r\n      <h4>{data[\"Plot\"] && data[\"Plot\"]}</h4>\r\n    </div>\r\n  ) : <div>Loading ...</div>;\r\n}\r\n\r\nexport default MovieDetail;\r\n\r\nconst styles = {\r\n  container: {textAlign: \"center\", maxWidth: 500}\r\n}\r\n","import { Switch, Route } from \"react-router-dom\";\n\nimport { useModal } from \"./Contexts/Modal\";\n\nimport Header from \"./Components/Header\";\nimport Modal from \"./Components/Modal\";\n\nimport MovieList from \"./Pages/MovieList\";\nimport MovieDetail from \"./Pages/MovieDetail\";\n\nconst App = () => {\n  const { modal, closeModal } = useModal();\n\n  return(\n    <div className=\"container\">\n      {modal ? <Modal data={modal} handleClick={closeModal} /> : null}\n      <Header />\n      <div className=\"content\">\n        <Switch>\n          <Route exact path=\"/infinite-scroll-test/\">\n            <MovieList />\n          </Route>\n          <Route path=\"/infinite-scroll-test/movie-detail/:id\">\n            <MovieDetail />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux'\r\nimport { GET_LIST, CLEANING, MOVIE_LIST_LOADING } from \"../Actions\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  currentPage: 1,\r\n  totalPage: 1,\r\n  keyword: \"\",\r\n  isLoading: false\r\n}\r\n\r\nconst movieReducer = (state = initialState, {type, payload}) => {\r\n  switch(type){\r\n    case GET_LIST:\r\n      if(payload) {\r\n        return {\r\n          ...state,\r\n          ...payload,\r\n          totalPage: parseInt(payload.totalPage, 10)\r\n        }\r\n      } else {\r\n        return initialState\r\n      }\r\n    case MOVIE_LIST_LOADING: {\r\n      return {\r\n        ...state,\r\n        isLoading: payload\r\n      }\r\n    }\r\n    case CLEANING: {\r\n      return initialState\r\n    }\r\n    default: \r\n      return state\r\n  }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  movies: movieReducer\r\n})\r\n\r\nexport default rootReducer\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './Reducers';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk)\r\n)\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { ModalProvider } from './Contexts/Modal';\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <ModalProvider>\n          <App />\n        </ModalProvider>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}